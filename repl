#!/usr/bin/env node

'use strict';

const repl = require('repl');
const q = require('querystring');
const axios = require('axios');

const tokenStorage = {
  get: () => { console.log('Asked for token') },
  set: (token) => { console.log(`Set token to ${token}`) },
  clear: () => { console.log('Asked to clear token') },
}

// Add a request interceptor
const requestInterceptor = function (config) {
  console.log("Request Url: ", config.url);
  console.log("Request Data: ", config.data);
  console.log("Request Headers: ", config.headers);
  return config;
};

// Add a response interceptor
const responseInterceptor = function (response) {
  console.log(response.data)
  return response;
};

const errorInterceptor = function (error) {
  console.log(error.data || error);
  return Promise.reject(error);
}

const packageInfo = require('./package.json');
console.log(`Starting snoode v${packageInfo.version} repl`);

global.XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;

const BeClient = require('./dist/BeClient.js');
const api = new BeClient({
  origin: 'http://localhost:3000',
  requestInterceptor: requestInterceptor,
  responseInterceptor: responseInterceptor,
  errorInterceptor: errorInterceptor,
}, tokenStorage);

const local = repl.start('$> ');

local.context.api = api;
